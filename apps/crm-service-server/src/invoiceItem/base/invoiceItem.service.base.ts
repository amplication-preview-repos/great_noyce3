/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  InvoiceItem as PrismaInvoiceItem,
  Invoice as PrismaInvoice,
  Product as PrismaProduct,
} from "@prisma/client";

export class InvoiceItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InvoiceItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.invoiceItem.count(args);
  }

  async invoiceItems(
    args: Prisma.InvoiceItemFindManyArgs
  ): Promise<PrismaInvoiceItem[]> {
    return this.prisma.invoiceItem.findMany(args);
  }
  async invoiceItem(
    args: Prisma.InvoiceItemFindUniqueArgs
  ): Promise<PrismaInvoiceItem | null> {
    return this.prisma.invoiceItem.findUnique(args);
  }
  async createInvoiceItem(
    args: Prisma.InvoiceItemCreateArgs
  ): Promise<PrismaInvoiceItem> {
    return this.prisma.invoiceItem.create(args);
  }
  async updateInvoiceItem(
    args: Prisma.InvoiceItemUpdateArgs
  ): Promise<PrismaInvoiceItem> {
    return this.prisma.invoiceItem.update(args);
  }
  async deleteInvoiceItem(
    args: Prisma.InvoiceItemDeleteArgs
  ): Promise<PrismaInvoiceItem> {
    return this.prisma.invoiceItem.delete(args);
  }

  async getInvoice(parentId: string): Promise<PrismaInvoice | null> {
    return this.prisma.invoiceItem
      .findUnique({
        where: { id: parentId },
      })
      .invoice();
  }

  async getProduct(parentId: string): Promise<PrismaProduct | null> {
    return this.prisma.invoiceItem
      .findUnique({
        where: { id: parentId },
      })
      .product();
  }
}
